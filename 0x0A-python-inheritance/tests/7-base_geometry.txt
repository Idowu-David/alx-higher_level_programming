This is a test file for the module integer_validator

Firstly import the module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("my_int", "string")
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("width", None)
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("my_int", (1, 2))
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", 3.4)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("width", -2)
Traceback (most recent call last):
...
ValueError: width must be greater than 0

>>> bg.integer_validator("my_int", [1, 2])
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer
